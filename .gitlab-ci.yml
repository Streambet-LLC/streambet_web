stages:
  - build
  - deploy

default:
  image: node:18-alpine
  cache:
    paths:
      - node_modules/

# --------------------------
# Template: Set AWS creds & env based on branch
# --------------------------
.before_script_template: &before_script_template
  before_script:
    - |
      echo "Branch: $CI_COMMIT_REF_NAME"

      # Determine ACCOUNT_OWNER (revyrie or client)
      if [[ "$CI_COMMIT_REF_NAME" == "dev" || "$CI_COMMIT_REF_NAME" == "qa" || "$CI_COMMIT_REF_NAME" == "beta" ]]; then
        export ACCOUNT_OWNER=$ACCOUNT_OWNER_REVYRIE
      else
        export ACCOUNT_OWNER=$ACCOUNT_OWNER_CLIENT
      fi

      echo "Using AWS credentials for account: $ACCOUNT_OWNER"

      # Export correct AWS credentials
      if [[ "$ACCOUNT_OWNER" == "revyrie" ]]; then
        export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID_REVYRIE"
        export AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY_REVYRIE"
      else
        export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID_CLIENT"
        export AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY_CLIENT"
      fi

      # Convert branch name to uppercase for var lookup
      export ENV_UPPER=$(echo "$CI_COMMIT_REF_NAME" | tr '[:lower:]' '[:upper:]')
      export S3_BUCKET_VAR="S3_BUCKET_${ENV_UPPER}"
      export CLOUDFRONT_ID_VAR="CLOUDFRONT_ID_${ENV_UPPER}"

      # Dereference S3 and CloudFront IDs
      export S3_BUCKET="${!S3_BUCKET_VAR}"
      export CLOUDFRONT_ID="${!CLOUDFRONT_ID_VAR}"

      echo "Target S3 Bucket: $S3_BUCKET"
      echo "CloudFront Distribution ID: $CLOUDFRONT_ID"

build:
  stage: build
  <<: *before_script_template
  script:
    - echo "Installing AWS CLI"
    - apk add --no-cache curl jq python3 py3-pip && pip3 install awscli

    # Construct SSM parameter path
    - export ENVIRONMENT="$ACCOUNT_OWNER/$CI_COMMIT_REF_NAME"
    - echo "Fetching VITE_ build-time envs from /$ENVIRONMENT"

    # Pull values from Parameter Store
    - export VITE_API_URL=$(aws ssm get-parameter --name "/streambet/$ENVIRONMENT/VITE_API_URL" --with-decryption --query "Parameter.Value" --output text)
    - export VITE_S3_BASE_URL=$(aws ssm get-parameter --name "/streambet/$ENVIRONMENT/VITE_S3_BASE_URL" --with-decryption --query "Parameter.Value" --output text)

    - echo "Building with VITE_API_URL=$VITE_API_URL"
    - VITE_API_URL=$VITE_API_URL VITE_S3_BASE_URL=$VITE_S3_BASE_URL npm ci && npm run build
  artifacts:
    paths:
      - dist/


deploy:
  stage: deploy
  image: amazon/aws-cli
  <<: *before_script_template
  dependencies:
    - build
  script:
    - echo "Deploying to s3://$S3_BUCKET"
    - aws s3 sync dist/ "s3://$S3_BUCKET" --delete

    - echo "Invalidating CloudFront cache - $CLOUDFRONT_ID"
    - aws cloudfront create-invalidation \
        --distribution-id "$CLOUDFRONT_ID" \
        --paths "/*"
  only:
    - dev
    - qa
    - beta
    - stag
    - prod
  environment:
    name: $CI_COMMIT_REF_NAME
  when: manual  # Optional: remove this if you want auto-deploy
