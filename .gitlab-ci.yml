stages:
  - build
  - deploy

default:
  image: node:20
  cache:
    paths:
      - node_modules/

# --------------------------
# Template for AWS env setup
# --------------------------
.setup_env: &setup_env
  before_script:
    - echo "Branch - $CI_COMMIT_REF_NAME"
    - apk add --no-cache curl jq python3 py3-pip
    - pip3 install awscli --break-system-packages

    # Determine AWS Account
    - |
      if [ "$CI_COMMIT_REF_NAME" = "dev" ] || [ "$CI_COMMIT_REF_NAME" = "qa" ] || [ "$CI_COMMIT_REF_NAME" = "beta" ]; then
        export ACCOUNT_OWNER="$ACCOUNT_OWNER_REVYRIE"
        export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID_REVYRIE"
        export AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY_REVYRIE"
      else
        export ACCOUNT_OWNER="$ACCOUNT_OWNER_CLIENT"
        export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID_CLIENT"
        export AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY_CLIENT"
      fi

    # Set bucket and CloudFront vars
    - |
      export ENV_UPPER=$(echo "$CI_COMMIT_REF_NAME" | tr '[:lower:]' '[:upper:]')
      export S3_BUCKET_VAR="S3_BUCKET_${ENV_UPPER}"
      export CLOUDFRONT_ID_VAR="CLOUDFRONT_ID_${ENV_UPPER}"
      export S3_BUCKET=$(eval echo "\$$S3_BUCKET_VAR")
      export CLOUDFRONT_ID=$(eval echo "\$$CLOUDFRONT_ID_VAR")

      echo "Account: $ACCOUNT_OWNER"
      echo "S3 Bucket: $S3_BUCKET"
      echo "CloudFront ID: $CLOUDFRONT_ID"
      echo "AWS Region: us-east-1"

    - export AWS_DEFAULT_REGION=us-east-1

# --------------------------
# Build Job
# --------------------------
build:
  stage: build
  <<: *setup_env
  script:
    - export ENVIRONMENT="$ACCOUNT_OWNER/$CI_COMMIT_REF_NAME"
    - echo "Fetching from Parameter Store - /streambet/$CI_COMMIT_REF_NAME"

    - export VITE_API_URL=$(aws ssm get-parameter --name "/streambet/$CI_COMMIT_REF_NAME/VITE_API_URL" --with-decryption --query "Parameter.Value" --output text)
    - export VITE_S3_BASE_URL=$(aws ssm get-parameter --name "/streambet/$CI_COMMIT_REF_NAME/VITE_S3_BASE_URL" --with-decryption --query "Parameter.Value" --output text)
    # - export VITE_BUGSNAG_SERVER=$(aws ssm get-parameter --name "/streambet/$CI_COMMIT_REF_NAME/VITE_BUGSNAG_SERVER" --with-decryption --query "Parameter.Value" --output text)
    # - export VITE_BUGSNAG_KEY=$(aws ssm get-parameter --name "/streambet/$CI_COMMIT_REF_NAME/VITE_BUGSNAG_KEY" --with-decryption --query "Parameter.Value" --output text)

    - echo "VITE_API_URL=$VITE_API_URL"
    - echo "VITE_S3_BASE_URL=$VITE_S3_BASE_URL"
    # - echo "VITE_BUGSNAG_SERVERL=$VITE_BUGSNAG_SERVER"
    # - echo "VITE_BUGSNAG_KEY=$VITE_BUGSNAG_KEY"


    - VITE_API_URL=$VITE_API_URL VITE_S3_BASE_URL=$VITE_S3_BASE_URL npm ci && npm run build
    # - VITE_API_URL=$VITE_API_URL VITE_S3_BASE_URL=$VITE_S3_BASE_URL VITE_BUGSNAG_SERVER=$VITE_BUGSNAG_SERVER VITE_BUGSNAG_KEY=$VITE_BUGSNAG_KEY npm ci && npm run build
  artifacts:
    paths:
      - dist/
    expire_in: 1 week
  only:
  - dev
  - qa
  - beta
  - stag
  - prod

# --------------------------
# Common deploy template
# --------------------------
.deploy_template: &deploy_template
  stage: deploy
  <<: *setup_env
  dependencies:
    - build
  script:
    # Recompute env vars in script section to ensure persistence
    - export ENV_UPPER=$(echo "$CI_COMMIT_REF_NAME" | tr '[:lower:]' '[:upper:]')
    - export S3_BUCKET=$(eval echo "\$S3_BUCKET_${ENV_UPPER}")
    - export CLOUDFRONT_ID=$(eval echo "\$CLOUDFRONT_ID_${ENV_UPPER}")

    - echo "Deploying to s3://$S3_BUCKET"
    - aws s3 sync dist/ "s3://$S3_BUCKET" --delete

    - echo "Invalidating CloudFront cache for $CLOUDFRONT_ID"
    - aws cloudfront create-invalidation --distribution-id "$CLOUDFRONT_ID" --paths "/*"

# --------------------------
# Deploy Jobs
# --------------------------

deploy_dev:
  <<: *deploy_template
  environment:
    name: dev
    url: https://streambetdev.revyrie.co
  only: [dev]

deploy_qa:
  <<: *deploy_template
  environment:
    name: qa
    url: https://streambetqa.revyrie.co
  only: [qa]

deploy_beta:
  <<: *deploy_template
  environment:
    name: beta
    url: https://streambet.revyrie.co
  only: [beta]

deploy_stag:
  <<: *deploy_template
  environment:
    name: stag
    url: https://stag.streambet.tv
  only: [stag]

deploy_prod:
  <<: *deploy_template
  environment:
    name: prod
    url: https://www.streambet.tv
  only: [prod]
  when: manual
